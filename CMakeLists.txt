# file is generated by Visual Studio 2022

# CMakeList.txt : CMake project for PLCStarter, include source and define
# project specific logic here.
#
cmake_minimum_required (VERSION 3.8)

project ("PLCStarter")


# Add source to this project's executable.

add_executable (PLCStarter 
            "src/PLC_IO_data.hpp"
            "src/PLC_IO_bridge.hpp"
            "src/App_controler.hpp"
            "src/Starter.cpp"         
            "src/Starter.cpp"
            "src/thread.h"
            "src/Server.h"
            "src/PLCServer.h"
            "src/StarterConfig.cpp"
            "src/StarterConfig.h"
            "src/PLCServer.cpp"
            "src/App_builder.cpp"
            "src/App_builder.hpp")

add_executable (TestApp 
            "src/TestApp.cpp"
            "src/PLC_IO_data.hpp"
            "src/PLC_IO_bridge.hpp")

# include/link boost library
target_include_directories(PLCStarter PRIVATE "${CMAKE_SOURCE_DIR}/boost_1_79_0")
target_link_directories(PLCStarter PRIVATE "${CMAKE_SOURCE_DIR}/boost_1_79_0/stage/lib")

target_include_directories(TestApp PRIVATE "${CMAKE_SOURCE_DIR}/boost_1_79_0")
target_link_directories(TestApp PRIVATE "${CMAKE_SOURCE_DIR}/boost_1_79_0/stage/lib")

# defines
target_compile_definitions(PLCStarter PRIVATE PLC_IO_BRIDGE_CREATE=1)
target_compile_definitions(TestApp    PRIVATE PLC_IO_BRIDGE_CONNECT=1)


# change default out dir
set_target_properties( PLCStarter TestApp
    PROPERTIES
    ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib"
    LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib"
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/build"
)



# set language standard to c++11
if (CMAKE_VERSION VERSION_GREATER 3.12)
  set_property(TARGET PLCStarter PROPERTY CXX_STANDARD 20)
  set_property(TARGET TestApp PROPERTY CXX_STANDARD 20)
endif()

# TODO: Add tests and install targets if needed.
